buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin"
    }
}

plugins {
    id "idea"
    id "maven-publish"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "org.jetbrains.kotlin.jvm" version "1.3.71"
}

group = "com.github.lazoyoung"
version = "1.0"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://papermc.io/repo/repository/maven-public/" }
}

configurations {
    priority
    sourceSets.main.compileClasspath = configurations.priority + sourceSets.main.compileClasspath
}

jar {
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    priority "com.destroystokyo.paper:paper-api:1.15.2-R0.1-SNAPSHOT"
    compileOnly "org.bukkit:craftbukkit:1.15-R0.1-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

sourceSets {
    main {
        resources {
            srcDir "src/main/resources"
        }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    expand("version": version)
    setFilteringCharset("utf-8")
}

idea.module {
    downloadJavadoc(true)
    downloadSources(true)
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

publishing {
    repositories {
        maven {
            name = "github"
            url = uri("https://maven.pkg.github.com/LazoYoung/LootTableFix")
            credentials {
                username = getProperty("github.username") ?: "undefined"
                password = getProperty("github.token") ?: "undefined"
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}